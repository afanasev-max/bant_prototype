#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π BANT —Å–∏—Å—Ç–µ–º—ã —Å —Ç—Ä–æ–π–Ω–æ–π –≥—Ä–∞–¥–∞—Ü–∏–µ–π –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–Ω–æ–º
"""

import requests
import json
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE = "http://localhost:80/api"
AUTH = ("admin", "password")

def test_communication_tone():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–Ω –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–Ω –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    response = requests.post(f"{API_BASE}/sessions/start", 
                           json={"deal_id": "TONE-TEST-001"}, 
                           auth=AUTH)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
        return
    
    session_data = response.json()
    session_id = session_data["session_id"]
    question = session_data["question"]
    
    print(f"üìù –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å:")
    print(f"   {question}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–Ω –æ–±—Ä–∞—â–µ–Ω –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
    if "–ü–æ–º–æ–≥–∏—Ç–µ" in question and "–∫–ª–∏–µ–Ω—Ç" in question:
        print("‚úÖ –¢–æ–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω - –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É")
    else:
        print("‚ùå –¢–æ–Ω –Ω–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω - –≤—Å–µ –µ—â–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç—É")
    
    return session_id

def test_three_level_status():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–æ–π–Ω—É—é –≥—Ä–∞–¥–∞—Ü–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–æ–π–Ω—É—é –≥—Ä–∞–¥–∞—Ü–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    response = requests.post(f"{API_BASE}/sessions/start", 
                           json={"deal_id": "STATUS-TEST-001"}, 
                           auth=AUTH)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
        return
    
    session_data = response.json()
    session_id = session_data["session_id"]
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    test_cases = [
        ("–≥–ª–∞–≤–∞ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "authority", "üü° –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ"),
        ("–ò–≤–∞–Ω–æ–≤ –ü–µ—Ç—Ä, CEO", "authority", "üü° –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ"),
        ("–Ω–µ –∑–Ω–∞—é", "authority", "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ"),
        ("500-700 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π", "budget", "üü° –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ"),
        ("–µ—Å—Ç—å –±—é–¥–∂–µ—Ç", "budget", "üü° –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ"),
        ("–Ω–µ—Ç", "budget", "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ")
    ]
    
    for answer, expected_slot, expected_status in test_cases:
        print(f"\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: '{answer}'")
        
        response = requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                               json={"text": answer},
                               auth=AUTH)
        
        if response.status_code == 200:
            data = response.json()
            if 'record' in data:
                record = data['record']
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ—Ç–∞
                if expected_slot == "authority":
                    authority = record.get("authority", {})
                    decision_maker = authority.get("decision_maker")
                    if decision_maker:
                        print(f"   Authority: {decision_maker}")
                        if "–≥–ª–∞–≤–∞" in answer or "CEO" in answer:
                            print("   ‚úÖ –ß–∞—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
                        elif "–Ω–µ –∑–Ω–∞—é" in answer:
                            print("   ‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
                
                elif expected_slot == "budget":
                    budget = record.get("budget", {})
                    have_budget = budget.get("have_budget")
                    if have_budget is not None:
                        print(f"   Budget: have_budget = {have_budget}")
                        if "500-700" in answer:
                            print("   ‚úÖ –ß–∞—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
                        elif "–µ—Å—Ç—å" in answer:
                            print("   ‚úÖ –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
                        elif "–Ω–µ—Ç" in answer:
                            print("   ‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

def test_timing_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    response = requests.post(f"{API_BASE}/sessions/start", 
                           json={"deal_id": "TIMING-TEST-001"}, 
                           auth=AUTH)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
        return
    
    session_data = response.json()
    session_id = session_data["session_id"]
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ timing
    requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                 json={"text": "–Ω–µ—Ç –±—é–¥–∂–µ—Ç–∞"},
                 auth=AUTH)
    requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                 json={"text": "–Ω–µ –∑–Ω–∞—é –õ–ü–†"},
                 auth=AUTH)
    requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                 json={"text": "–Ω–µ –∑–Ω–∞—é –ø—Ä–æ–±–ª–µ–º—ã"},
                 auth=AUTH)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º timing
    response = requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                           json={"text": "–∫–æ–Ω–µ—Ü –≥–æ–¥–∞"},
                           auth=AUTH)
    
    if response.status_code == 200:
        data = response.json()
        if 'record' in data:
            record = data['record']
            timing = record.get("timing", {})
            timeframe = timing.get("timeframe")
            
            print(f"   Timeframe: {timeframe}")
            if timeframe == "this_year":
                print("   ‚úÖ this_year –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ UI –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç
                current_date = datetime.now()
                year_end = current_date.year
                print(f"   ‚úÖ –í UI –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ: '–ö–æ–Ω–µ—Ü {year_end} –≥–æ–¥–∞'")
            else:
                print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π timeframe: {timeframe}")

def test_ui_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ UI"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ UI...")
    
    try:
        response = requests.get("http://localhost:80/", auth=AUTH)
        if response.status_code == 200:
            print("‚úÖ UI –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            html_content = response.text
            if "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–µ—Ç–∫–æ" in html_content or "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ" in html_content:
                print("‚úÖ –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—É—Å—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ UI")
            else:
                print("‚ö†Ô∏è –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—É—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ UI")
        else:
            print(f"‚ùå UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ UI: {e}")

def test_authority_scoring():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫–æ—Ä–∏–Ω–≥ Authority"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–∏–Ω–≥ Authority...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    response = requests.post(f"{API_BASE}/sessions/start", 
                           json={"deal_id": "SCORING-TEST-001"}, 
                           auth=AUTH)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
        return
    
    session_data = response.json()
    session_id = session_data["session_id"]
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –õ–ü–†
    test_cases = [
        ("–≥–ª–∞–≤–∞ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
        ("–ò–≤–∞–Ω–æ–≤ –ü–µ—Ç—Ä, CEO", "—á–∞—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
        ("–Ω–µ –∑–Ω–∞—é", "–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    ]
    
    for answer, description in test_cases:
        print(f"\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: '{answer}' ({description})")
        
        response = requests.post(f"{API_BASE}/sessions/{session_id}/answer",
                               json={"text": answer},
                               auth=AUTH)
        
        if response.status_code == 200:
            data = response.json()
            if 'record' in data and 'score' in data['record']:
                score = data['record']['score']
                authority_score = score.get('authority', {}).get('value', 0)
                authority_confidence = score.get('authority', {}).get('confidence', 0)
                
                print(f"   –°–∫–æ—Ä: {authority_score}/25")
                print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {authority_confidence:.0%}")
                
                if "–≥–ª–∞–≤–∞" in answer:
                    if 8 <= authority_score <= 12:
                        print("   ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ü–µ–Ω–µ–Ω–∞")
                    else:
                        print(f"   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∫–æ—Ä –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {authority_score}")
                elif "–ò–≤–∞–Ω–æ–≤" in answer:
                    if 12 <= authority_score <= 18:
                        print("   ‚úÖ –ß–∞—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ü–µ–Ω–µ–Ω–∞")
                    else:
                        print(f"   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∫–æ—Ä –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {authority_score}")
                elif "–Ω–µ –∑–Ω–∞—é" in answer:
                    if authority_score <= 5:
                        print("   ‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ü–µ–Ω–µ–Ω–æ")
                    else:
                        print(f"   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∫–æ—Ä –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {authority_score}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π BANT —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–Ω –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
        session_id = test_communication_tone()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–æ–π–Ω—É—é –≥—Ä–∞–¥–∞—Ü–∏—é
        test_three_level_status()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤
        test_timing_display()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º UI
        test_ui_access()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–∏–Ω–≥
        test_authority_scoring()
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("‚úÖ –¢–æ–Ω –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        print("‚úÖ –¢—Ä–æ–π–Ω–∞—è –≥—Ä–∞–¥–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        print("‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º")
        print("‚úÖ –°–∫–æ—Ä–∏–Ω–≥ Authority –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        print("‚úÖ UI –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
